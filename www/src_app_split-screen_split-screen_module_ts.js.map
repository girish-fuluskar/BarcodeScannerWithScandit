{"version":3,"file":"src_app_split-screen_split-screen_module_ts.js","mappings":"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","sources":["./src/app/split-screen/split-screen-routing.module.ts","./src/app/split-screen/split-screen.module.ts","./src/app/split-screen/split-screen.page.ts","./src/app/split-screen/split-screen.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SplitScreenPage } from './split-screen.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SplitScreenPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SplitScreenPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { SplitScreenPageRoutingModule } from './split-screen-routing.module';\nimport { SplitScreenPage } from './split-screen.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SplitScreenPageRoutingModule\n  ],\n  declarations: [SplitScreenPage]\n})\nexport class SplitScreenPageModule {}\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, ViewChild } from '@angular/core';\nimport { ViewDidEnter, ViewWillLeave } from '@ionic/angular';\nimport { environment } from 'src/environments/environment';\n\ndeclare var Scandit;\n\ninterface Result {\n  data: string;\n  symbology: string;\n}\n\n@Component({\n  selector: 'app-split-screen',\n  templateUrl: './split-screen.page.html',\n  styleUrls: ['./split-screen.page.scss'],\n})\nexport class SplitScreenPage implements AfterViewInit, ViewDidEnter, ViewWillLeave, OnDestroy {\n  private context = Scandit.DataCaptureContext.forLicenseKey(environment.scanditLicenseKey);\n  private camera = Scandit.Camera.default;\n\n  private settings = new Scandit.BarcodeCaptureSettings();\n  private barcodeCapture = Scandit.BarcodeCapture.forContext(this.context, this.settings);\n\n  private captureView = Scandit.DataCaptureView.forContext(this.context);\n  @ViewChild('captureView') captureViewElement: ElementRef<HTMLDivElement>;\n  private overlay = Scandit.BarcodeCaptureOverlay.withBarcodeCaptureForView(this.barcodeCapture, this.captureView);\n\n  public results: Result[] = [];\n\n  public isCaptureViewConnected = false;\n\n  private scanTimer;\n\n  constructor(\n    private changeDetection: ChangeDetectorRef,\n  ) { }\n\n  ngAfterViewInit() {\n    this.overlay.viewfinder = new Scandit.LaserlineViewfinder(Scandit.LaserlineViewfinderStyle.Animated);\n\n    this.settings.enableSymbologies([\n      Scandit.Symbology.EAN13UPCA,\n      Scandit.Symbology.EAN8,\n      Scandit.Symbology.UPCE,\n      Scandit.Symbology.QR,\n      Scandit.Symbology.DataMatrix,\n      Scandit.Symbology.Code39,\n      Scandit.Symbology.Code128,\n      Scandit.Symbology.InterleavedTwoOfFive,\n    ]);\n    this.settings.codeDuplicateFilter = 1000;\n    this.settings.locationSelection = new Scandit.RadiusLocationSelection(\n      new Scandit.NumberWithUnit(0, Scandit.MeasureUnit.Fraction)\n    );\n    this.barcodeCapture.applySettings(this.settings);\n\n    this.barcodeCapture.addListener({\n      didScan: async (barcodeCapture, session) => {\n        const barcode = session.newlyRecognizedBarcodes[0];\n        const symbology = new Scandit.SymbologyDescription(barcode.symbology);\n\n        this.results.push({ data: barcode.data, symbology: symbology.readableName });\n        this.changeDetection.detectChanges();\n\n        this.resetScanTimeout();\n      }\n    });\n\n    this.context.setFrameSource(this.camera);\n    this.camera.switchToDesiredState(Scandit.FrameSourceState.On);\n  }\n\n  ionViewDidEnter(): void {\n    this.captureView.connectToElement(this.captureViewElement.nativeElement);\n    this.isCaptureViewConnected = true;\n\n    this.barcodeCapture.isEnabled = true;\n\n    this.resetScanTimeout();\n  }\n\n  ionViewWillLeave(): void {\n    this.captureView.detachFromElement();\n    this.isCaptureViewConnected = false;\n\n    this.camera.switchToDesiredState(Scandit.FrameSourceState.Off);\n    this.barcodeCapture.isEnabled = false;\n  }\n\n  ngOnDestroy() {\n    this.context.dispose();\n  }\n\n  public clearResults() {\n    this.results = [];\n  }\n\n  public resetScanTimeout() {\n    clearTimeout(this.scanTimer);\n    this.barcodeCapture.isEnabled = true;\n    this.scanTimer = setTimeout(() => {\n      this.barcodeCapture.isEnabled = false;\n      this.changeDetection.detectChanges();\n    }, 10000);\n  }\n}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Split Screen</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"clearResults()\\\">Clear</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div #captureView (click)=\\\"this.resetScanTimeout()\\\" [ngClass]=\\\"{'connected': this.isCaptureViewConnected, 'paused': !this.barcodeCapture.isEnabled}\\\">\\n    <p *ngIf=\\\"!this.barcodeCapture.isEnabled\\\">Tap to continue</p>\\n  </div>\\n  <ion-list slot=\\\"fixed\\\">\\n    <ion-item *ngFor=\\\"let result of results\\\">\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <ion-text>\\n          <h2>{{ result.data }}</h2>\\n        </ion-text>\\n        <ion-text>\\n          <p>{{ result.symbology }}</p>\\n        </ion-text>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}